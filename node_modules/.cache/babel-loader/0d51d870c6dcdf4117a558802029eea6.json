{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apple\\\\Desktop\\\\highspot\\\\my-highspot\\\\src\\\\Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = ({\n  ca\n}) => {\n  _s();\n\n  const [cards, setCards] = useState([{}]);\n  const [loaded, setLoaded] = useState(false);\n\n  async function getData() {\n    const response = await fetch('https://api.elderscrollslegends.io/v1/cards/?pageSize=20&page=0&name=');\n    const data = await response.json();\n    setCards(data.cards);\n    console.log(data.cards);\n  }\n\n  useEffect(() => {\n    if (!loaded) {\n      getData();\n    }\n\n    return () => {\n      setLoaded(true);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: loaded ? cards === null || cards === void 0 ? void 0 : cards.map((card, index) => {\n      var _card$set;\n\n      return /*#__PURE__*/_jsxDEV(Col, {\n        className: \"card-deck mt-4\",\n        lg: {\n          span: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '12rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: card.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [card.name, \" / \", card.type, \" / \", card === null || card === void 0 ? void 0 : (_card$set = card.set) === null || _card$set === void 0 ? void 0 : _card$set.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: card.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"alkdjfaldkf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cards, \"3lAfAnT3mEsDWLcTZ88DVHes87U=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/apple/Desktop/highspot/my-highspot/src/Cards.js"],"names":["React","useState","useEffect","Row","Col","Card","Cards","ca","cards","setCards","loaded","setLoaded","getData","response","fetch","data","json","console","log","map","card","index","span","width","imageUrl","name","type","set","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;;AAEA,iBAAeW,OAAf,GAAyB;AACrB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uEAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,IAAAA,QAAQ,CAACM,IAAI,CAACP,KAAN,CAAR;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACP,KAAjB;AACH;;AAEDN,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACQ,MAAJ,EAAW;AACTE,MAAAA,OAAO;AACR;;AACD,WAAO,MAAI;AACPD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFD;AAGH,GAPQ,CAAT;AASA,sBACI,QAAC,GAAD;AAAA,cAAMD,MAAM,GACZF,KADY,aACZA,KADY,uBACZA,KAAK,CAAEW,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP;AAAA;;AAAA,0BACP,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,gBAAf;AAA4C,QAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAhD;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,kCACI,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,GAAG,EAAEH,IAAI,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,yBAAaJ,IAAI,CAACK,IAAlB,SAA2BL,IAAI,CAACM,IAAhC,SAAyCN,IAAzC,aAAyCA,IAAzC,oCAAyCA,IAAI,CAAEO,GAA/C,8CAAyC,UAAWF,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,wBAAYL,IAAI,CAACQ;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAqCP,KAArC;AAAA;AAAA;AAAA;AAAA,cADO;AAAA,KAAX,CADY,gBAWV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApCD;;GAAMf,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nconst Cards = ({ca}) => {\n    const [cards, setCards] = useState([{}]);\n    const [loaded, setLoaded] = useState(false)\n\n    async function getData() {\n        const response = await fetch('https://api.elderscrollslegends.io/v1/cards/?pageSize=20&page=0&name=');\n        const data = await response.json();\n        setCards(data.cards)\n        console.log(data.cards)\n    }\n\n    useEffect(()=>{\n        if(!loaded){\n          getData()      \n        }\n        return ()=>{\n            setLoaded(true)\n        }\n    })\n\n    return (\n        <Row>{loaded ? \n        cards?.map((card, index)=>\n            <Col className=\"card-deck mt-4\" key={index} lg={{ span: 3 }}>\n                <Card style={{ width: '12rem' }}>\n                    <Card.Img src={card.imageUrl} />\n                    <Card.Body>\n                        <Card.Title>{card.name} / {card.type} / {card?.set?.name}</Card.Title>\n                        <Card.Text>{card.text}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n        ):<div>alkdjfaldkf</div>}\n        </Row>\n    )\n\n}\nexport default Cards"]},"metadata":{},"sourceType":"module"}