{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apple\\\\Desktop\\\\highspot\\\\my-highspot\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Cards from './Cards.js';\nimport Search from './Search.js';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(0);\n  const [keywords, setKeywords] = useState(\"\");\n\n  async function getData() {\n    setLoading(true);\n    const response = await fetch(`https://api.elderscrollslegends.io/v1/cards/?pageSize=20&page=${page}&name=${keywords}`);\n    const data = await response.json();\n\n    if (cards.length > 0 && data) {\n      setCards(cards.concat(data.cards));\n    } else if (data) {\n      setCards(data.cards);\n    }\n\n    setLoading(false);\n  }\n\n  const clicked = () => {\n    setKeywords(document.getElementById(\"search\").value);\n    setCards([]);\n    setLoaded(false);\n    setPage(0);\n  };\n\n  const onScroll = () => {\n    if (window.pageYOffset + 800 > document.body.scrollHeight) {\n      setPage(page + 1);\n      getData();\n    }\n  };\n\n  useEffect(() => {\n    if (!loaded) {\n      getData();\n      setLoaded(true);\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => [window.removeEventListener(\"scroll\", onScroll)];\n  }, [page, keywords, loaded]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      clicked: clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Cards, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      className: \"spinner\",\n      animation: \"border\",\n      variant: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dfGrR+zHVBzbxzc3idyxYGIEc2I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/apple/Desktop/highspot/my-highspot/src/App.js"],"names":["React","useState","useEffect","Cards","Search","Container","Spinner","App","cards","setCards","loaded","setLoaded","loading","setLoading","page","setPage","keywords","setKeywords","getData","response","fetch","data","json","length","concat","clicked","document","getElementById","value","onScroll","window","pageYOffset","body","scrollHeight","addEventListener","removeEventListener"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,sCAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,iBAAeiB,OAAf,GAAyB;AACvBL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,iEAAgEN,IAAK,SAAQE,QAAS,EAAxF,CAA5B;AACA,UAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,QAAGd,KAAK,CAACe,MAAN,GAAa,CAAb,IAAkBF,IAArB,EAA0B;AACxBZ,MAAAA,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAaH,IAAI,CAACb,KAAlB,CAAD,CAAR;AACD,KAFD,MAEM,IAAGa,IAAH,EAAQ;AACZZ,MAAAA,QAAQ,CAACY,IAAI,CAACb,KAAN,CAAR;AACD;;AACDK,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,QAAMY,OAAO,GAAG,MAAM;AACpBR,IAAAA,WAAW,CAACS,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAnC,CAAX;AACAnB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAI,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GALD;;AAOA,QAAMc,QAAQ,GAAG,MAAM;AACrB,QAAIC,MAAM,CAACC,WAAP,GAAmB,GAAnB,GAAyBL,QAAQ,CAACM,IAAT,CAAcC,YAA3C,EAAyD;AACvDlB,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACAI,MAAAA,OAAO;AACR;AACF,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACQ,MAAJ,EAAW;AACTQ,MAAAA,OAAO;AACPP,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACDmB,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC;AACA,WAAO,MAAM,CAACC,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,QAArC,CAAD,CAAb;AACD,GAPQ,EAON,CAACf,IAAD,EAAOE,QAAP,EAAiBN,MAAjB,CAPM,CAAT;AASA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEe;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGb,OAAO,gBAAG,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAgD,MAAA,OAAO,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnDQD,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport './App.css';\nimport React, { useState ,useEffect} from 'react';\nimport Cards from './Cards.js';\nimport Search from './Search.js';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [loaded, setLoaded] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [page, setPage] = useState(0)\n  const [keywords, setKeywords] = useState(\"\")\n\n  async function getData() {\n    setLoading(true)\n    const response = await fetch(`https://api.elderscrollslegends.io/v1/cards/?pageSize=20&page=${page}&name=${keywords}`);\n    const data = await response.json();\n    if(cards.length>0 && data){\n      setCards(cards.concat(data.cards))\n    }else if(data){\n      setCards(data.cards)\n    }\n    setLoading(false)\n  }\n\n  const clicked = () => {\n    setKeywords(document.getElementById(\"search\").value)\n    setCards([])\n    setLoaded(false)\n    setPage(0)\n  }\n\n  const onScroll = () => {\n    if (window.pageYOffset+800 > document.body.scrollHeight) {\n      setPage(page+1)\n      getData()\n    }\n  };\n  \n  useEffect(() => {\n    if(!loaded){\n      getData()  \n      setLoaded(true)\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => [window.removeEventListener(\"scroll\", onScroll)]\n  }, [page, keywords, loaded]);\n\n  return (\n    <Container className=\"App\">\n      <Search clicked={clicked} />\n      {loading ? <Cards cards={cards}/>:\n        <Spinner className=\"spinner\" animation=\"border\" variant=\"primary\"/>\n      }\n      <div id=\"bottom\"></div>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}