{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apple\\\\Desktop\\\\highspot\\\\my-highspot\\\\src\\\\Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  var _cards$cards;\n\n  const [cards, setCards] = useState([{}]);\n  const [loaded, setLoaded] = useState(false);\n\n  async function getData() {\n    const response = await fetch('https://api.elderscrollslegends.io/v1/cards');\n    const data = await response.json();\n    setCards(data);\n    console.log(data);\n  }\n\n  useEffect(() => {\n    if (!loaded) {\n      getData();\n    }\n\n    return () => {\n      setLoaded(true);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: cards === null || cards === void 0 ? void 0 : (_cards$cards = cards.cards) === null || _cards$cards === void 0 ? void 0 : _cards$cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: card.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [card.name, \" / \", card.type, \" / \", card.set]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: card.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cards, \"3lAfAnT3mEsDWLcTZ88DVHes87U=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/apple/Desktop/highspot/my-highspot/src/Cards.js"],"names":["React","useState","useEffect","Container","Row","Col","Card","Modal","Cards","cards","setCards","loaded","setLoaded","getData","response","fetch","data","json","console","log","map","card","index","image","name","type","set","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAEA,iBAAeY,OAAf,GAAyB;AACrB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,IAAAA,QAAQ,CAACM,IAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACS,MAAJ,EAAW;AACTE,MAAAA,OAAO;AACR;;AACD,WAAO,MAAI;AACPD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFD;AAGH,GAPQ,CAAT;AASA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAA,kBACCH,KADD,aACCA,KADD,uCACCA,KAAK,CAAEA,KADR,iDACC,aAAcW,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBACnB,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,GAAG,EAAED,IAAI,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,yBAAaF,IAAI,CAACG,IAAlB,SAA2BH,IAAI,CAACI,IAAhC,SAAyCJ,IAAI,CAACK,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,wBAAYL,IAAI,CAACM;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAWL,KAAX;AAAA;AAAA;AAAA;AAAA,gBADC;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtCD;;GAAMd,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\n\nconst Cards = () => {\n    const [cards, setCards] = useState([{}]);\n    const [loaded, setLoaded] = useState(false)\n\n    async function getData() {\n        const response = await fetch('https://api.elderscrollslegends.io/v1/cards');\n        const data = await response.json();\n        setCards(data)\n        console.log(data)\n    }\n\n    useEffect(()=>{\n        if(!loaded){\n          getData()      \n        }\n        return ()=>{\n            setLoaded(true)\n        }\n    })\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                {cards?.cards?.map((card, index)=>\n                <Card key={index}>\n                    <Card.Img src={card.image} />\n                    <Card.Body>\n                        <Card.Title>{card.name} / {card.type} / {card.set}</Card.Title>\n                        <Card.Text>{card.text}</Card.Text>\n                    </Card.Body>\n                </Card>\n                )}\n                </Col>\n            </Row>\n        </Container>\n    )\n\n}\nexport default Cards"]},"metadata":{},"sourceType":"module"}